/**
 * NOTE: THIS IS AN AUTO-GENERATED FILE. DO NOT MODIFY DIRECTLY.
 */
type Query {
  activity(start: Float!, end: Float!): [Activity]
  daily(start: Float!, end: Float!): [Daily]
  getDevice(input: GetDeviceInput!): GetDeviceResult!
  getHeartRate(input: GetHeartRateInput!): GetHeartRateResult!
  getSleep(input: GetSleepInput!): GetSleepResult!
  getUser(input: GetUserInput!): GetUserResult!
  heartRate(start: DateTime!, end: DateTime!): [HeartRate]
  oxygenSaturation(start: Float!, end: Float!): [OxygenSaturation]
  sleep(start: Float!, end: Float!): [Sleep]
}

input GetDeviceInput {
  id: Int!
}

type GetDeviceResult {
  device: Device
}

type Device {
  id: Int!
  userId: Int!
  name: String!
}

scalar DateTime

input GetHeartRateInput {
  start: DateTime!
  end: DateTime!
}

type GetHeartRateResult {
  heartRate: [HeartRate]
}

input GetSleepInput {
  start: DateTime!
  end: DateTime!
}

type GetSleepResult {
  sleep: [Sleep]
}

type heartRateSummary {
  average: Float
  min: Float
  max: Float
}

type Activity {
  start: Float
  end: Float
  duration: Float
  type: String
}

type Daily {
  date: Float
  heartRate: heartRateSummary
}

type HeartRate {
  date: Float
  point: Float
}

type OxygenSaturation {
  date: Float
  point: Float
}

type Sleep {
  start: Float
  end: Float
  state: String
}

input GetUserInput {
  id: Int!
}

type GetUserResult {
  user: User
}

type User {
  id: Int!
  email: String!
  name: String!
  devices: [Device]
}
