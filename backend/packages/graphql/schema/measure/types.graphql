type Measure {
  id: Int
  abbreviation: String
  components: [Measure!]
  conceptsOfInterest: [ConceptOfInterest!]
  description: String
  indications: [Indication!]
  name: String!
  recipe: MeasureRecipe
  reports: [ReportRecipe!]
  questions: [Question!]
  status: String # MeasureStatus
  url: String
}

type Answer {
  id: Int
  text: String
  value: Float
}

type ConceptOfInterest {
  id: Int!
  description: String
  name: String!
  url: String
}

type Filter {
  id: Int!
  dimension: String!
  join: String
  operator: String!
  values: [String!]
}

type Indication {
  id: Int!
  description: String
  name: String!
  url: String
}

type MeasureRecipe {
  id: Int
  aggregation: String  # Why not AggregationType? https://github.com/prisma-labs/graphqlgen/issues/213
  description: String
  filters: [Filter!]
  sql: String!
}

type Question {
  id: Int
  answers: [Answer!]
  description: String
  text: String!
}

type ReportRecipe {
  id: Int
  chartType: String  # Why not ChartType? https://github.com/prisma-labs/graphqlgen/issues/213
  meta: JSON
}