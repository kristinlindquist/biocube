generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  devices   Device[]
  email     String    @unique
  name      String    @db.VarChar(255)
}

model Device {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  userId    Int
  name      String    @db.VarChar(255)
  user      User      @relation(fields: [userId], references: [id])
}

model Stream {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  data      Datum[]
  deviceId  Int
  name      String    @db.VarChar(255)
}

model Datum {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  stream    Stream   @relation(fields: [streamId], references: [id])
  streamId  Int
  value     Float
}

model AspectOfHealth {
  id             Int              @id @default(autoincrement())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime?        @updatedAt
  description    String
  maohs          CoiMaohs[]
  name           String           @db.VarChar(255)
  indications    Indication[]
  aohIndications aohIndications[]
}

model CoiMaohs {
  id                  Int               @id @default(autoincrement())
  createdAt           DateTime          @default(now())
  updatedAt           DateTime?         @updatedAt
  aspectOfHealth      AspectOfHealth    @relation(fields: [aspectOfHealthId], references: [id])
  aspectOfHealthId    Int
  conceptOfInterest   ConceptOfInterest @relation(fields: [conceptOfInterestId], references: [id])
  conceptOfInterestId Int
}

model ConceptOfInterest {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime?     @updatedAt
  description String
  moahs       CoiMaohs[]
  measures    MeasureCois[]
  name        String        @db.VarChar(255)
}

model MeasureCois {
  id                  Int               @id @default(autoincrement())
  createdAt           DateTime          @default(now())
  updatedAt           DateTime?         @updatedAt
  conceptOfInterest   ConceptOfInterest @relation(fields: [conceptOfInterestId], references: [id])
  conceptOfInterestId Int
  measure             Measure           @relation(fields: [measureId], references: [id])
  measureId           Int
}

enum Validity {
  ESTABLISHED
  NOVEL
}

model Measure {
  id                Int                 @id @default(autoincrement())
  createdAt         DateTime            @default(now())
  updatedAt         DateTime?           @updatedAt
  description       String
  cois              MeasureCois[]
  name              String              @db.VarChar(255)
  validationStudies ValidationStudies[]
  validity          Validity
  indication        Indication?         @relation(fields: [indicationId], references: [id])
  indicationId      Int?
}

model Study {
  id                Int                 @id @default(autoincrement())
  createdAt         DateTime            @default(now())
  updatedAt         DateTime?           @updatedAt
  abstract          String
  authors           String
  title             String
  validationStudies ValidationStudies[]
}

model ValidationStudies {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  measure   Measure   @relation(fields: [measureId], references: [id])
  measureId Int
  study     Study     @relation(fields: [studyId], references: [id])
  studyId   Int
}

model Indication {
  id              Int              @id @default(autoincrement())
  createdAt       DateTime         @default(now())
  updatedAt       DateTime?        @updatedAt
  name            String           @db.VarChar(255)
  description     String
  aspectsOfHealth AspectOfHealth[]
  measures        Measure[]
  aohIndications  aohIndications[]
}

model aohIndications {
  id               Int            @id @default(autoincrement())
  createdAt        DateTime       @default(now())
  updatedAt        DateTime?      @updatedAt
  aspectOfHealth   AspectOfHealth @relation(fields: [aspectOfHealthId], references: [id])
  aspectOfHealthId Int
  indication       Indication     @relation(fields: [indicationId], references: [id])
  indicationId     Int
}
