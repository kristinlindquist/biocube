generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  devices   Device[]
  email     String    @unique
  name      String    @db.VarChar(255)
}

model Device {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  userId    Int
  name      String    @db.VarChar(255)
  user      User      @relation(fields: [userId], references: [id])
}

model Stream {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  data      Datum[]
  deviceId  Int
  name      String    @db.VarChar(255)
}

model Datum {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  stream    Stream   @relation(fields: [streamId], references: [id])
  streamId  Int
  value     Float
}

model AspectOfHealth {
  id                 Int                 @id @default(autoincrement())
  createdAt          DateTime            @default(now())
  updatedAt          DateTime?           @updatedAt
  description        String
  conceptsOfInterest ConceptOfInterest[]
  name               String              @db.VarChar(255)
  indications        Indication[]
}

model ConceptOfInterest {
  id              Int              @id @default(autoincrement())
  createdAt       DateTime         @default(now())
  updatedAt       DateTime?        @updatedAt
  description     String
  aspectsOfHealth AspectOfHealth[]
  measures        Measure[]
  name            String           @db.VarChar(255)
}

model Measure {
  id                 Int                 @id @default(autoincrement())
  createdAt          DateTime            @default(now())
  updatedAt          DateTime?           @updatedAt
  description        String
  conceptsOfInterest ConceptOfInterest[]
  name               String              @db.VarChar(255)
  validationStudies  Study[]
  indications        Indication[]
}

model Study {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  abstract  String?
  authors   String
  title     String
  measures  Measure[]
}

model Indication {
  id              Int              @id @default(autoincrement())
  createdAt       DateTime         @default(now())
  updatedAt       DateTime?        @updatedAt
  name            String           @db.VarChar(255)
  description     String
  aspectsOfHealth AspectOfHealth[]
  measures        Measure[]
}
