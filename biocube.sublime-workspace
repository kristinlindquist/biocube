{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Int",
				"ConceptOfInterest"
			]
		]
	},
	"buffers":
	[
		{
			"file": "web/src/components/QueryBuilder/ExploreQueryBuilder.tsx",
			"settings":
			{
				"buffer_size": 4282,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "web/src/components/QueryBuilder/FilterGroup.tsx",
			"settings":
			{
				"buffer_size": 1898,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "web/src/containers/DynamicPages.tsx",
			"settings":
			{
				"buffer_size": 1112,
				"line_ending": "Unix"
			}
		},
		{
			"file": "web/src/components/Table/DataGrid.tsx",
			"settings":
			{
				"buffer_size": 4454,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/**\n * Measure type resolvers\n */\nimport { ConceptOfInterest, Indication, MeasureToDataType } from '@prisma/client';\nimport { Parent, Args, Context } from '../../../../types';\n\nconst Measure = {\n  conceptsOfInterest: async (parent: Parent, _: Args, context: Context): Promise<ConceptOfInterest[] | null> => {\n    const { id } = parent;\n    const { prisma } = context;\n\n    return prisma.measure.findUnique({ where: { id } }).conceptsOfInterest();\n  },\n\n  dataTypeMap: async (parent: Parent, _: Args, context: Context): Promise<MeasureToDataType[] | null> => {\n    const { id } = parent;\n    const { prisma } = context;\n    console.log(prisma.measure.findUnique({ where: { id } }).dataTypeMap());\n    const templates: Template[] = await prisma.template.findMany({\n      include: { pages: true },\n    });\n    return prisma.measure.findUnique({ where: { id } }).dataTypeMap();\n  },\n\n  indications: async (parent: Parent, _: Args, context: Context): Promise<Indication[] | null> => {\n    const { id } = parent;\n    const { prisma } = context;\n\n    return prisma.measure.findUnique({ where: { id } }).indications();\n  },\n};\n\nexport default Measure;\n",
			"file": "backend/packages/graphql/schema/measure/resolvers/types/Measure.ts",
			"file_size": 1037,
			"file_write_time": 132623711923492128,
			"settings":
			{
				"buffer_size": 1144,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "backend/packages/graphql/schema/measure/resolvers/mutations/upsertMeasure.ts",
			"settings":
			{
				"buffer_size": 1362,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "backend/packages/graphql/schema/measure/types.graphql",
			"settings":
			{
				"buffer_size": 439,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "backend/packages/graphql/schema/measure/mutations.graphql",
			"settings":
			{
				"buffer_size": 780,
				"line_ending": "Unix"
			}
		},
		{
			"file": "backend/packages/db/prisma/schema.prisma",
			"settings":
			{
				"buffer_size": 6290,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"grap",
				"Set Syntax: GraphQL"
			],
			[
				"packages",
				"Preferences: Browse Packages"
			],
			[
				"pris",
				"Set Syntax: Prisma"
			],
			[
				"prisma",
				"Set Syntax: Prisma"
			],
			[
				"package",
				"Preferences: Browse Packages"
			],
			[
				"prettify",
				"Preferences: Settings â€“ Syntax Specific"
			],
			[
				"Package Control:",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 199.0,
		"history":
		[
			"exit",
			"packages.install JavaImports",
			"install JavaImports"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/kristinlindquist/development/biocube-mono"
	],
	"file_history":
	[
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/measure/resolvers/queries/getMeasure.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/measure/resolvers/queries/getMeasures.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/api/queries/measure/getMeasures.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/api/queries/measure/getMeasure.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/api/mutations/measure/upsertMeasure.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/measure/resolvers/mutations/upsertMeasure.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/measure/resolvers/mutations/deleteMeasure.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/codegen.yml",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/api/mutations/measure/deleteMeasure.ts",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Inputs/TextField/TextField.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Inputs/Select/Select.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Button/Group.stories.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Inputs/FormField.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Dialog/FormDialog.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/QueryBuilder/FilterInput.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/theme.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/types/index.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Dialog/FormDialog.stories.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Button/Dropdown.stories.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Button/Fab.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Button/Fab.stories.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Button/Dropdown.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Button/IconButton.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Button/IconButtons.stories.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/utils/index.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/api/index.ts",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/QueryBuilder/types.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Inputs/Select/Chips.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Inputs/Select/Select.stories.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Table/DataGrid.tsx",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/bi/schema/Data.js",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/QueryBuilder/TimeGroup.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/QueryBuilder/utils.ts",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Table/EditCell.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Page/Page.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/QueryBuilder/stateChangeHeuristics.ts",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Chart/ChartRenderer.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Button/Group.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Chart/Bar.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Chart/Line.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Chart/Calendar.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Inputs/TextField/index.ts",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Inputs/index.ts",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/QueryBuilder/MemberGroup.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/containers/QueryBuilder.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/QueryBuilder/FilterGroup.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/containers/DynamicPages.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/QueryBuilder/SelectChartType.tsx",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/bi/schema/Indication.js",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/bi/schema/Measure.js",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/bi/schema/User.js",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/bi/schema/AspectOfHealth.js",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/bi/schema/ConceptOfInterest.js",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/bi/schema/DeviceType.js",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/bi/schema/DataType.js",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/bi/schema/Indicationtomeasure.js",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/bi/schema/Aspectofhealthtoconceptofinterest.js",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/bi/schema/Aspectofhealthtoindication.js",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/bi/schema/Conceptofinteresttomeasure.js",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/bi/schema/Device.js",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/bi/schema/Indicationtouser.js",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/bi/schema/States.js",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Inputs/Select/index.ts",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Text/index.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Text/index.tsx.ts",
		"/Users/kristinlindquist/development/biocube-mono/web/src/App.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/QueryBuilder/index.ts",
		"/Users/kristinlindquist/development/biocube/schema/Data.js",
		"/Users/kristinlindquist/development/biocube/schema/States.js",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Dynamic/Component.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Chart/index.ts",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Button/index.ts",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/QueryBuilder/ButtonDropdown.tsx",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/db/prisma/schema.prisma",
		"/Users/kristinlindquist/development/biocube-mono/web/src/containers/MyChart.tsx",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/template/types.graphql",
		"/Users/kristinlindquist/development/biocube/schema/Datum.js",
		"/Users/kristinlindquist/development/biocube/schema/User.js",
		"/Users/kristinlindquist/development/biocube/schema/DataType.js",
		"/Users/kristinlindquist/development/biocube/schema/Indicationtouser.js",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/googlefit/resolvers/queries/getHeartRate.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/googlefit/resolvers/queries/getSleep.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/googlefit/resolvers/queries/getActivity.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/googlefit/resolvers/queries/getDaily.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/googlefit/resolvers/types/HeartRate.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/api/queries/googlefit/getHeartRate.ts",
		"/Users/kristinlindquist/development/biocube-mono/web/src/containers/Measures.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Table/DataGrid.stories.tsx",
		"/Users/kristinlindquist/development/biocube-mono/web/src/gql/index.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/api/mutations/indication/deleteIndication.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/indication/mutations.graphql",
		"/Users/kristinlindquist/development/biocube-mono/web/src/gql/typed-document-nodes.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/indication/resolvers/mutations/deleteIndication.ts",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Dynamic/index.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/template/resolvers/types/Template.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/api/queries/template/getTemplate.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/api/queries/template/getTemplates.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/template/resolvers/queries/getTemplates.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/template/resolvers/queries/getTemplate.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/measure/mutations.graphql",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/api/mutations/indication/upsertIndication.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/indication/resolvers/mutations/upsertIndication.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/indication/queries.graphql",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/indication/resolvers/types/Indication.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/db/prisma/index.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/user/resolvers/types/User.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/index.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/api/mutations/template/upsertTemplate.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/template/resolvers/mutations/deleteTemplate.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/db/index.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/device/resolvers/types/Device.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/template/resolvers/mutations/upsertTemplate.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/api/mutations/template/deleteTemplate.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/api/mutations/measure/index.ts",
		"/Users/kristinlindquist/development/biocube-mono/web/src/components/Button/index.js",
		"/Users/kristinlindquist/development/biocube-mono/web/src/logger/index.ts",
		"/Users/kristinlindquist/development/biocube-mono/biocube.sublime-project",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/measure/types.graphql",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/api/mutations/measure/createMeasure.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/measure/queries.graphql",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/measure/resolvers/types/Measure.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/index.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/utils/logger.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/user/queries.graphql",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/schema/user/resolvers/queries/getUser.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/packages/graphql/types/schema.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/node_modules/.prisma/client/index.d.ts",
		"/Users/kristinlindquist/development/biocube-mono/backend/build/packages/graphql/schema/measure/resolvers/index.d.ts"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"DataTypeToDataType",
			"MeasureToDataType",
			"DataTypeMap",
			"desc",
			"MeasureUpdateInput",
			"formatColumns",
			"getColumns",
			"formatColumns",
			"params",
			"FieldType",
			"maxWidth",
			"onSubmit",
			"ref",
			"getDocument",
			"native",
			"MenuItem",
			"form",
			"Dialog",
			"dialog",
			"handleUpdate",
			"form",
			"handleClose",
			"handleItemSelect",
			"label",
			": SelectProps",
			"onClick",
			"^",
			"sessionGranularity",
			"getSelectedOptions",
			"getMenuItemStyles",
			"newDims",
			"state",
			"oldTds",
			"newNewState",
			"newState",
			"filters",
			"multiple",
			"name",
			"defaults",
			"DateRanges",
			"size",
			"resolveFormatter",
			"map",
			"key",
			"resolveFormatter",
			"getSelectProps",
			"index",
			"updateM",
			"Member",
			"colors",
			"TypeToMemoChartComponent",
			"TypeToChartComponent",
			"Component",
			"durationMeasures",
			"console",
			"Loader",
			"colors",
			"legend",
			"margin",
			"CartesianChart",
			"ChartComponent",
			"Props",
			"ChartComponent",
			"query",
			"error",
			"ChartPivotRow",
			"resultSet",
			"legend",
			"tablePivot",
			"tableColumns",
			"getSelectedOptions",
			"DateRanges",
			"name",
			"CubejsApi",
			"updateChartType",
			"chartType",
			"updateFilters",
			"FilterInputs",
			"native",
			"getOptions",
			"query",
			"updateChartType",
			"chartType",
			"getType",
			"label",
			"outlinedLabel",
			"formControl",
			"getOptions",
			"console",
			"updateTimeDimensions",
			"getSelectedOptions",
			"ChartRenderer",
			"isQueryPresent",
			"updateChartType",
			"console",
			"IdType",
			"split",
			"dateRangeMenu",
			"DateRanges",
			"options",
			"granularityMenu",
			"updateMeasures",
			"addMemberName",
			"FilterInput",
			"operators",
			"renderChart",
			"CartesianChart",
			"TableRow",
			"stackedChartData",
			"numeral",
			"availableMeasures",
			"cubejsApi",
			"Card",
			"options",
			"duringSleep",
			"Datum",
			"Stream",
			"get",
			"capitalize",
			"SpacingProps",
			"Box",
			"Button",
			"Fields",
			"FieldType",
			"SelectFieldType",
			"OptionsType",
			"gql",
			"getMeasures"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"Int",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "web/src/components/QueryBuilder/ExploreQueryBuilder.tsx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4282,
						"regions":
						{
						},
						"selection":
						[
							[
								2286,
								2286
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScriptReact.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "web/src/components/QueryBuilder/FilterGroup.tsx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1898,
						"regions":
						{
						},
						"selection":
						[
							[
								891,
								891
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScriptReact.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 560.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "web/src/containers/DynamicPages.tsx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1112,
						"regions":
						{
						},
						"selection":
						[
							[
								37,
								37
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScriptReact.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "web/src/components/Table/DataGrid.tsx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4454,
						"regions":
						{
						},
						"selection":
						[
							[
								3661,
								3661
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScriptReact.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 2127.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "backend/packages/graphql/schema/measure/resolvers/types/Measure.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1144,
						"regions":
						{
						},
						"selection":
						[
							[
								810,
								810
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "backend/packages/graphql/schema/measure/resolvers/mutations/upsertMeasure.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1362,
						"regions":
						{
						},
						"selection":
						[
							[
								248,
								248
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 245.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "backend/packages/graphql/schema/measure/types.graphql",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 439,
						"regions":
						{
						},
						"selection":
						[
							[
								368,
								368
							]
						],
						"settings":
						{
							"syntax": "Packages/GraphQL-SublimeText3/GraphQL.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "backend/packages/graphql/schema/measure/mutations.graphql",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 780,
						"regions":
						{
						},
						"selection":
						[
							[
								342,
								342
							]
						],
						"settings":
						{
							"syntax": "Packages/GraphQL-SublimeText3/GraphQL.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "backend/packages/db/prisma/schema.prisma",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6290,
						"regions":
						{
						},
						"selection":
						[
							[
								2088,
								2088
							]
						],
						"settings":
						{
							"syntax": "Packages/sublimeText3/prisma.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							}
						},
						"translation.x": 0.0,
						"translation.y": 592.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.doc":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "biocube.sublime-project",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
